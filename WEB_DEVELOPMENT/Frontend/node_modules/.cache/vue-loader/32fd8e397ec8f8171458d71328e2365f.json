{"remainingRequest":"/home/anthonysaka/Desktop/gomibako/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anthonysaka/Desktop/gomibako/src/views/Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/anthonysaka/Desktop/gomibako/src/views/Home.vue","mtime":1605240324956},{"path":"/home/anthonysaka/Desktop/gomibako/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anthonysaka/Desktop/gomibako/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/anthonysaka/Desktop/gomibako/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/anthonysaka/Desktop/gomibako/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anthonysaka/Desktop/gomibako/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnLi4vYXNzZXRzL3N0eWxlcy9tYWluLmNzcyc7Cg=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwNA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n\n    <b-row class=\"mb-4\">\n\n      <b-col cols=\"12\" md=\"3\">\n\n        <b-row>\n          <b-col cols=\"12\">\n            <div class=\"card  shadow\" style=\"height: 6rem; width: 80%\">\n                <div class=\"card-body\">\n                  <div class=\"row no-gutters align-items-center\">\n                    <div class=\"col mr-1\">\n                      <div class=\"d-flex flex-column\">\n                        <div class=\"text-xs font-weight-bold text-success text-uppercase mb-1\">Activos</div>\n                      </div>\n                      <div class=\"d-flex flex-column\">\n                        <div class=\"h5 mb-0 font-weight-bold text-gray-800\">DATO</div>\n                      </div>\n                    </div>\n                    <div class=\"col-auto\">\n                      <i class=\"fas fa-trash fa-2x text-success\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n          </b-col>\n        </b-row>\n\n        <b-row>\n          <b-col cols=\"12\">\n            <div class=\"card  shadow\" style=\"height: 6rem; width: 80%\">\n                <div class=\"card-body\">\n                  <div class=\"row no-gutters align-items-center\">\n                    <div class=\"col mr-1\">\n                      <div class=\"d-flex flex-column\">\n                        <div class=\"text-xs font-weight-bold text-success text-uppercase mb-1\">Activos</div>\n                      </div>\n                      <div class=\"d-flex flex-column\">\n                        <div class=\"h5 mb-0 font-weight-bold text-gray-800\">DATO</div>\n                      </div>\n                    </div>\n                    <div class=\"col-auto\">\n                      <i class=\"fas fa-trash fa-2x text-success\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n          </b-col>\n        </b-row>\n\n        <b-row>\n          <b-col cols=\"12\">\n            <div class=\"card  shadow\" style=\"height: 6rem; width: 80%\">\n                <div class=\"card-body\">\n                  <div class=\"row no-gutters align-items-center\">\n                    <div class=\"col mr-1\">\n                      <div class=\"d-flex flex-column\">\n                        <div class=\"text-xs font-weight-bold text-success text-uppercase mb-1\">Activos</div>\n                      </div>\n                      <div class=\"d-flex flex-column\">\n                        <div class=\"h5 mb-0 font-weight-bold text-gray-800\">DATO</div>\n                      </div>\n                    </div>\n                    <div class=\"col-auto\">\n                      <i class=\"fas fa-trash fa-2x text-success\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n          </b-col>\n        </b-row>\n\n      </b-col>\n      \n\n      <b-col cols=\"12\" md=\"9\">\n        <div class=\"card shadow\">\n          <div class=\"card-body\">\n            <div id=\"map\"></div>\n          </div>\n        </div>\n      </b-col>\n\n\n    </b-row>\n    <!--     ****************  -->\n\n\n\n  </div>\n</template>\n\n<script>\n  import mapboxgl from \"mapbox-gl\";\n  import Swal from 'sweetalert2';\n  import axios from 'axios';\n\n  export default {\n    name: \"Home\",\n    data() {\n      return {\n        accessToken: 'pk.eyJ1IjoiYW50aG9ueXNha2EiLCJhIjoiY2tnbjBrZWR4MGkwNDJ0cGczb2UxNTE4YiJ9.WsEmhirejFVApuNz9Ivtlw',\n        userlogged: JSON.parse(localStorage.getItem('userdata')),\n      };\n    },\n    mounted() {\n      mapboxgl.accessToken = this.accessToken;\n      var map = new mapboxgl.Map({\n        container: \"map\",\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center: [-70.703692, 19.415888],\n        zoom: 12,\n      });\n\n      var geojson = { type: 'FeatureCollection',\n                      features: [{\n                        type: 'Feature',\n                        geometry: {\n                          type: 'Point',\n                          coordinates: [-70.702859,19.416531]\n                        },\n                        properties: {\n                          title: 'Mapbox',\n                          description: 'Washington, D.C.'\n                        }\n                      },\n                      {\n                        type: 'Feature',\n                        geometry: {\n                          type: 'Point',\n                          coordinates: [-70.700939,19.419314]\n                        },\n                        properties: {\n                          title: 'Mapbox',\n                          description: 'San Francisco, California'\n                        }\n                      }]\n                    };\n      // add markers to map\n      geojson.features.forEach(function(marker) {\n\n        // create a HTML element for each feature\n        var el = document.createElement('div');\n        el.className = 'marker';\n\n        // make a marker for each feature and add to the map\n        new mapboxgl.Marker(el)\n          .setLngLat(marker.geometry.coordinates)\n            .setPopup( new mapboxgl.Popup({ offset: 25}) // add popups\n          .setHTML('<h3>' + marker.properties.title + '</h3><p>' + marker.properties.description + '</p>'))\n          .addTo(map);\n      });\n      \n\n\n\n\n\n      if (this.userlogged.default_credentials == true) {\n        Swal.mixin({\n                      confirmButtonText: 'Next &rarr;',\n                      progressSteps: ['1', '2', '3','4'],\n                      allowOutsideClick: false\n                      \n                    }).queue([\n                      {\n                        title: 'Hey, hemos detectado que aun no has cambiado tus credenciales por defecto, por favor continuar para cambiarlas (Es muy recomendado).',           \n                        showCancelButton: true,\n                      },\n                      {\n                        input: 'text',\n                        title: 'Cambiar el nombre de usuario por defecto',\n                        text: 'Por favor introducir un nuevo nombre de usuario',\n                        showCancelButton: false,\n                        inputValidator: (value) => {\n                                    if (!value) {\n                                      return 'You need to write something!'\n                                    }\n                        }\n                      },\n                      {\n                        input: 'password',\n                        title: 'Cambiar contrasena por defecto',\n                        text: 'Por favor introducir una nueva contrasena',\n                        showCancelButton: false,\n                        inputValidator: (value) => {\n                                    if (!value) {\n                                      return 'You need to write something!'\n                                    }\n                        }\n                      },\n                    ]).then(async(result) => {\n                      if (result.value) {\n                        const res = await axios.put('http://localhost:5000/gomibako/internalapi/1.0/changecredentials',\n                                            {\n                                                \"id\":this.userlogged.id,\n                                                \"newusername\":result.value[1],\n                                                \"newpassword\":result.value[2]\n                                            }) \n                        const username = result.value[1] \n                        const password = result.value[2]       \n                        const res1 = await axios.post('http://localhost:5000/gomibako/internalapi/1.0/login', {username,password})\n                        localStorage.setItem('userdata', JSON.stringify(res1.data.user[0]))\n                        this.userlogged = JSON.parse(localStorage.getItem('userdata')),\n                        console.log(res);    \n                      }\n                    })\n      }\n\n\n    }\n  };\n</script>\n\n<style>\n  @import '../assets/styles/main.css';\n</style>\n"]}]}